import Head from 'next/head'
import Image from 'next/image'
import styles from '../styles/Home.module.css'
import { useEffect, useState, useRef } from 'react';
import axios from 'axios';


export default function Home() {

  const apiKey = "bb398a35ad8cc193602bdcc9521a14f3";
  const location = "vancouver";
  const units = "metric";

  const url = `https://api.openweathermap.org/data/2.5/forecast?q=${location}&units=${units}&appid=${apiKey}`;

  const [data, setData] = useState();
  const grabWeather = useRef(false);
  const fetchWeather = async () => {
    const response = await axios.get(url);
    console.log(response);

    console.log(response.data.list);
    const arrayOfDays = [];

    let weatherData = response.data.list.map((weather, index) => {
      console.log(parseInt(weather.dt_txt.substr(8, 2), 10))
      let num = parseInt(weather.dt_txt.substr(8, 2), 10);

      if (num !== arrayOfDays.find(element => element === num)) {
        arrayOfDays.push(num);
        console.log("Here");
        console.log(response.data.list[index])
        var month = '';
        var icon = '';


        // formatting the date - convert from numbers to text
        if (weather.dt_txt.substr(5, 2) == 1) {
          month = "January"
        } else if (weather.dt_txt.substr(5, 2) == 2) {
          month = "February"
        } else if (weather.dt_txt.substr(5, 2) == 4) {
          month = "March"
        } else if (weather.dt_txt.substr(5, 2) == 4) {
          month = "April"
        } else if (weather.dt_txt.substr(5, 2) == 5) {
          month = "May"
        } else if (weather.dt_txt.substr(5, 2) == 6) {
          month = "June"
        } else if (weather.dt_txt.substr(5, 2) == 7) {
          month = "July"
        } else if (weather.dt_txt.substr(5, 2) == 8) {
          month = "August"
        } else if (weather.dt_txt.substr(5, 2) == 9) {
          month = "September"
        } else if (weather.dt_txt.substr(5, 2) == 10) {
          month = "October"
        } else if (weather.dt_txt.substr(5, 2) == 11) {
          month = "November"
        } else if (weather.dt_txt.substr(5, 2) == 12) {
          month = "December"
        }

        if (weather.weather[0].main == 'Clouds') {
          icon = '/weather/clouds.png'
        } else if (weather.weather[0].main == 'Clear') {
          icon = '/weather/clear-sky.png'
        } else if (weather.weather[0].main == 'Atmosphere') {
          icon = '/weather/mist.png'
        } else if (weather.weather[0].main == 'Rain') {
          icon = '/weather/rain.png'
        } else if (weather.weather[0].main == 'Drizzle') {
          icon = '/weather/shower-rain.png'
        } else if (weather.weather[0].main == 'Snow') {
          icon = '/weather/snow.png'
        } else if (weather.weather[0].main == 'Thunderstorms') {
          icon = '/weather/thunderstorm.png'
        }

        var now = new Date(weather.dt_txt);
        var days = ['Sun', 'Mon', 'Tues', 'Wed', 'Thurs', 'Fri', 'Sat']
        var day = days[now.getDay()];


        return (
          <div key={index} className={styles.weatherCard}>

            <p className={styles.day}>
              {day}
            </p>
            <p className={styles.date}>
              {month}&nbsp;{weather.dt_txt.substr(8, 2)}, {weather.dt_txt.substr(0, 4)}
            </p>

            <Image
              src={icon}
              alt={icon}
              width={140}
              height={100}
              priority
              className={styles.weatherIcon}
            />

            <div className={styles.temp}>{weather.main.temp.toFixed(1)}Â°C</div>
            <div>{weather.weather[0].main}</div>
          </div>
        )
      }
    })
    console.log(arrayOfDays);
    setData(weatherData);
  }

  useEffect(() => {
    if (grabWeather.current === true) {
      fetchWeather();
    }
    return () => {
      grabWeather.current = true
    }
  }, []);

  const current = new Date();
  const date = `${current.getDate()}/${current.getMonth() + 1}/${current.getFullYear()}`


  return (
    <>
      <Head>
        <title>Weather Journal</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.png" />
        <link rel="preconnect" href="https://fonts.googleapis.com" />
        <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
        <link href="https://fonts.googleapis.com/css2?family=Montserrat:wght@400;700&display=swap" rel="stylesheet"></link>
      </Head>
      <main className={styles.main}>
        <div className={styles.description}>
          <p>Vancouver, B.C. Weather <br />
            Last Updates: {date}
          </p>
          <p>By Thi</p>
        </div>

        <div >
          <a href="https://thinguyen.ca"
            target="blank">
          </a>

        </div>


        <div className={styles.center}>
          <Image
            className={styles.logo}
            src="/logo.svg"
            width="100"
            height="100"
            priority
          />
          {/* <h1>Journal Weather</h1> */}
        </div>


        <div className={styles.grid}>
          {data}
        </div>

      </main>
    </>
  )
}
